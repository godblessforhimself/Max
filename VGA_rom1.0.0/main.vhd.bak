library	ieee;
use		ieee.std_logic_1164.all;
use		ieee.std_logic_unsigned.all;
use		ieee.std_logic_arith.all;

entity main is
port(
	clk_0,reset: in std_logic;
	hs,vs: out std_logic; 
	rr,gg,bb: out std_logic_vector(2 downto 0);
	
	ps2clk, ps2data: inout std_logic;
	
	clk25: in std_logic;
	moveL, moveR, jump:in std_logic;
	tt: out std_logic
);
end vga_rom;

architecture vga_rom of vga_rom is

component vga640480 is
	 port(
			x,y         :      in std_LOGIC_vector(9 downto 0);
			address		:		  out	STD_LOGIC_VECTOR(11 DOWNTO 0);
			reset       :         in  STD_LOGIC;
			clk50       :		  out std_logic; 
			q		    :		  in STD_LOGIC_vector(8 downto 0);
			clk_0       :         in  STD_LOGIC; --100Mʱ������
			hs,vs       :         out STD_LOGIC; --��ͬ������ͬ���ź�
			r,g,b       :         out STD_LOGIC_vector(2 downto 0);
			temp        :    out std_LOGIC
	  );
end component;

component r IS
	PORT
	(
		address		: IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		clock		: IN STD_LOGIC ;
		q		: OUT STD_LOGIC_VECTOR (2 DOWNTO 0)
	);
END component;

component g IS
	PORT
	(
		address		: IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		clock		: IN STD_LOGIC ;
		q		: OUT STD_LOGIC_VECTOR (2 DOWNTO 0)
	);
END component;

component b IS
	PORT
	(
		address		: IN STD_LOGIC_VECTOR (11 DOWNTO 0);
		clock		: IN STD_LOGIC ;
		q		: OUT STD_LOGIC_VECTOR (2 DOWNTO 0)
	);
END component;

component ps2_mouse is
  port( clk_in : in std_logic;
        reset_in : in std_logic;
        ps2_clk : inout std_logic;
        ps2_data : inout std_logic;
        left_button : out std_logic;
        right_button : out std_logic;
		middle_button : out std_logic;
        mousex: buffer std_logic_vector(9 downto 0);
        mousey: buffer std_logic_vector(9 downto 0);
        error_no_ack : out std_logic );
       
end component;


-------------------------------------------
component gameControlUnit is
port(
	rclk, fclk : in std_logic;
	moveL, moveR, jump : in std_logic;
	x, y : buffer std_logic_vector(10 downto 0) := "00000000000"
	--v : buffer std_logic_vector(7 downto 0)
	);
end component;
--------------------------------------------



signal address_tmp: std_logic_vector(11 downto 0);
signal clk50: std_logic;
signal q_tmp: std_logic_vector(8 downto 0);
signal xx: std_LOGIC_VECTOR(9 downto 0):="0100101100";
signal yy: std_LOGIC_VECTOR(9 downto 0):="0011100110";

-----------------------mouse-----------------------
signal tlb, trb, tmb : std_LOGIC; 
signal error: std_LOGIC;
---------------------------------------------------

-----------------------debug----------------------
signal ttt, nouse: std_logic;
signal xxx, yyy:std_LOGIC_vector(10 downto 0);

--------------------------------------------------
begin
tt<=ttt;
u1: vga640480 port map(
						x=>xx, y=>yy,
						address=>address_tmp, 
						reset=>reset, 
						clk50=>clk50, 
						q=>q_tmp, 
						clk_0=>clk_0, 
						hs=>hs, vs=>vs, 
						r=>rr, g=>gg, b=>bb,
						temp=>nouse
					);
rom1: r port map(	
						address=>address_tmp, 
						clock=>clk50, 
						q=>q_tmp(2 downto 0)
					);
					
rom2: g port map(	
						address=>address_tmp, 
						clock=>clk50, 
						q=>q_tmp(5 downto 3)
					);
					
rom3: b port map(	
						address=>address_tmp, 
						clock=>clk50, 
						q=>q_tmp(8 downto 6)
					);
					
--mou: ps2_mouse port map(
--						clk_in=>clk50,
--						reset_in=>reset,
--						  ps2_clk=>ps2clk,
--						  ps2_data=>ps2data,
--						  left_button=>tlb,
--						  right_button=>trb,
--						middle_button=>tmb,
--						  mousex=>xx,
--						  mousey=>yy,
--						  error_no_ack=>error
--						);

gc: gameControlUnit port map(
						rclk=>clk50,
						fclk=>clk25,
						moveL=>moveL,
						moveR=>moveR,
						jump=>jump,
						x=>xxx,
						y=>yyy
                   ); 
						 
process (xxx)
begin 
	xx<= conv_std_logic_vector(conv_integer(xxx) * 639 / 1023, 10);
end process;

process (yyy)
begin
	yy<= 479 - conv_std_logic_vector(conv_integer(yyy) * 479 / 1023, 10);
end process;
						
end vga_rom;